apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: s2i-quarkus
  namespace: quarkuscoffeeshop-cicd
spec:
  inputs:
    resources:
      - name: source
        type: git
  params:
    - name: VERSION
      description: The version of the quarkus s2i builder image
      default: '20.3.0-java11'
    - name: PATH_CONTEXT
      description: The location of the path to run s2i from.
      default: .
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
    - name: IMAGE_TAG
      description: image release tag
      default: 'v1.0'
  outputs:
    resources:
      - name: image
        type: image
  steps:
    - name: generate
      image: quay.io/openshift-pipeline/s2i
      workingdir: /workspace/source
      command: ['s2i', 'build', '$(params.PATH_CONTEXT)', 'quay.io/quarkus/ubi-quarkus-native-s2i:$(params.VERSION)', '--as-dockerfile', '/gen-source/Dockerfile.gen']
      volumeMounts:
        - name: gen-source
          mountPath: /gen-source
      resources:
        limits:
          cpu: 500m
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 2Gi
    - name: build
      image: quay.io/buildah/stable
      workingdir: /gen-source
      command: ['buildah', 'bud', '--tls-verify=$(params.TLSVERIFY)', '--layers', '-f', '/gen-source/Dockerfile.gen', '-t', '$(outputs.resources.image.url):$(params.IMAGE_TAG)', '.']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
      resources:
        limits:
          cpu: 500m
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 2Gi
      securityContext:
        privileged: true
    - name: push
      image: quay.io/buildah/stable
      command: ['buildah', 'push', '--tls-verify=$(params.TLSVERIFY)', '$(outputs.resources.image.url):$(params.IMAGE_TAG)', 'docker://$(outputs.resources.image.url):$(params.IMAGE_TAG)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      resources:
        limits:
          cpu: 500m
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 2Gi
      securityContext:
        privileged: true
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}
